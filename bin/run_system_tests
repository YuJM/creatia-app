#!/bin/bash

# 색상 설정
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

echo -e "${GREEN}🔧 시스템 테스트 실행 준비 중...${NC}"

# 기존 프로세스 정리
echo -e "${YELLOW}기존 서버 프로세스 정리 중...${NC}"
pkill -f "rails server" 2>/dev/null || true
pkill -f "caddy" 2>/dev/null || true
sleep 2

# 테스트 데이터베이스 준비
echo -e "${YELLOW}테스트 데이터베이스 준비 중...${NC}"
RAILS_ENV=test bin/rails db:prepare

# Rails 테스트 서버 시작
echo -e "${YELLOW}Rails 테스트 서버 시작 중 (포트 3000)...${NC}"
RAILS_ENV=test bin/rails server -p 3000 -d

# Rails 서버 시작 대기
echo -e "${YELLOW}Rails 서버 시작 대기 중...${NC}"
for i in {1..10}; do
  if curl -s http://localhost:3000/up > /dev/null; then
    echo -e "${GREEN}✅ Rails 서버 준비 완료${NC}"
    break
  fi
  echo -n "."
  sleep 1
done

# Caddy 시작
echo -e "${YELLOW}Caddy 프록시 서버 시작 중 (포트 8080)...${NC}"
caddy run --config Caddyfile.test --adapter caddyfile > /tmp/caddy.log 2>&1 &
CADDY_PID=$!

# Caddy 시작 대기
sleep 2

echo -e "${YELLOW}Caddy 상태 확인 중...${NC}"
if ps -p $CADDY_PID > /dev/null; then
  echo -e "${GREEN}✅ Caddy 준비 완료${NC}"
else
  echo -e "${RED}❌ Caddy 시작 실패${NC}"
  cat /tmp/caddy.log
  exit 1
fi

# 테스트 실행
echo -e "${GREEN}🚀 시스템 테스트 실행 중...${NC}"
echo ""

# 테스트 실행 (인자 전달)
if [ $# -eq 0 ]; then
  bundle exec rspec spec/system/ --format documentation
else
  bundle exec rspec "$@"
fi
TEST_EXIT_CODE=$?

# 정리
echo ""
echo -e "${YELLOW}서버 정리 중...${NC}"
pkill -f "rails server" 2>/dev/null || true
kill $CADDY_PID 2>/dev/null || true

if [ $TEST_EXIT_CODE -eq 0 ]; then
  echo -e "${GREEN}✅ 테스트 완료${NC}"
else
  echo -e "${RED}❌ 테스트 실패${NC}"
fi

exit $TEST_EXIT_CODE