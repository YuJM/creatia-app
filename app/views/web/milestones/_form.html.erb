<%= form_with model: [:web, milestone], local: true, class: "space-y-6" do |form| %>
  <% if milestone.respond_to?(:errors) && milestone.errors.any? %>
    <div class="bg-red-50 border border-red-400 text-red-700 px-4 py-3 rounded">
      <h3 class="font-bold mb-2">Please fix the following errors:</h3>
      <ul class="list-disc list-inside">
        <% milestone.errors.full_messages.each do |message| %>
          <li><%= message %></li>
        <% end %>
      </ul>
    </div>
  <% end %>

  <!-- Basic Information -->
  <div class="space-y-4">
    <div>
      <%= form.label :title, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.text_field :title, 
          class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500",
          placeholder: "e.g., Q1 2024 Release, Beta Launch",
          required: true %>
    </div>

    <div>
      <%= form.label :description, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.text_area :description, 
          rows: 4,
          class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500",
          placeholder: "Describe the milestone goals and key deliverables..." %>
    </div>
  </div>

  <!-- Dates -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <div>
      <%= form.label :planned_start, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.date_field :planned_start, 
          class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" %>
    </div>

    <div>
      <%= form.label :planned_end, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.date_field :planned_end, 
          class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" %>
    </div>
  </div>

  <!-- Status and Owner -->
  <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
    <div>
      <%= form.label :status, class: "block text-sm font-medium text-gray-700 mb-1" %>
      <%= form.select :status, 
          options_for_select([
            ['Planning', 'planning'],
            ['Active', 'active'],
            ['Completed', 'completed'],
            ['On Hold', 'on_hold'],
            ['Cancelled', 'cancelled']
          ], milestone.status),
          {},
          class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" %>
    </div>

    <div>
      <%= form.label :owner_id, "Owner", class: "block text-sm font-medium text-gray-700 mb-1" %>
      <% if current_organization.respond_to?(:users) %>
        <%= form.select :owner_id, 
            options_for_select(
              safe_user_options_for_select(current_organization),
              milestone.respond_to?(:owner_id) ? milestone.owner_id : nil
            ),
            { include_blank: "Select owner..." },
            class: "w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm focus:ring-indigo-500 focus:border-indigo-500" %>
      <% else %>
        <input type="text" 
               class="w-full px-3 py-2 border border-gray-300 rounded-md shadow-sm bg-gray-100" 
               value="Owner selection not available" 
               readonly>
      <% end %>
    </div>
  </div>

  <!-- Submit -->
  <div class="flex justify-end gap-3 pt-4 border-t">
    <%= link_to "Cancel", milestones_path, 
        class: "px-4 py-2 bg-gray-200 text-gray-700 rounded hover:bg-gray-300" %>
    <%= form.submit determine_submit_text(milestone),
        class: "px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700" %>
  </div>
<% end %>

<%# Helper methods %>
<%
def safe_user_options_for_select(organization)
  return [] unless organization.respond_to?(:users)
  
  begin
    users = organization.users.pluck(:name, :id)
    users.present? ? users : []
  rescue => e
    Rails.logger.error "Failed to load users for organization: #{e.message}"
    []
  end
end

def determine_submit_text(milestone)
  if milestone.respond_to?(:persisted?) && milestone.persisted?
    "Update Milestone"
  else
    "Create Milestone"
  end
end
%>