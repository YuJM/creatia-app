# Database Configuration
# PostgreSQL 데이터베이스 접속 정보
DATABASE_HOST=localhost
DATABASE_PORT=5432
DATABASE_USERNAME=postgres
DATABASE_PASSWORD=
DATABASE_NAME_DEVELOPMENT=creatia_app_development
DATABASE_NAME_TEST=creatia_app_test
DATABASE_NAME_PRODUCTION=creatia_app_production

# Domain Configuration
# 개발 환경: localhost:3000, 프로덕션: 실제 도메인
APP_DOMAIN=localhost:3000
USE_HTTPS=false

# GitHub OAuth App Configuration (소셜 로그인용)
# GitHub Settings > Developer settings > OAuth Apps에서 생성
# Homepage URL: http://localhost:3000
# Authorization callback URL: http://localhost:3000/auth/github/callback
GITHUB_OAUTH_CLIENT_ID=your_oauth_client_id
GITHUB_OAUTH_CLIENT_SECRET=your_oauth_client_secret

# GitHub App Configuration (저장소 연동용)
# GitHub Settings > Developer settings > GitHub Apps에서 생성
# Callback URL: http://localhost:3000/github/callback
# Webhook URL: http://localhost:3000/webhooks/github
GITHUB_APP_ID=your_github_app_id
GITHUB_CLIENT_ID=your_github_client_id
GITHUB_CLIENT_SECRET=your_github_client_secret

# GitHub App Private Key를 Base64로 인코딩해서 설정합니다
# 변환 방법:
# 1. Private Key 파일을 Base64로 인코딩:
#    cat github-app-private-key.pem | base64 -w 0
# 2. 또는 macOS에서:
#    cat github-app-private-key.pem | base64
# 3. 인코딩된 문자열을 아래 환경변수에 설정
GITHUB_APP_PRIVATE_KEY_BASE64=your_base64_encoded_private_key

# GitHub Webhook Secret (자동 생성 가능)
# 생성 방법: rails secret | head -c 64
GITHUB_WEBHOOK_SECRET=your_webhook_secret

# Google OAuth Configuration (선택사항)
GOOGLE_CLIENT_ID=your_google_client_id
GOOGLE_CLIENT_SECRET=your_google_client_secret

베이스 도메인 설정 (필수)
BASE_DOMAIN=creatia.local

# Production 배포 시 Kamal/Docker 환경변수 예시
# DigitalOcean App Platform:
#   Settings > App-Level Environment Variables에서 설정
#
# Heroku:
#   heroku config:set GITHUB_APP_PRIVATE_KEY_BASE64="인코딩된_키"
#
# Docker Compose:
#   environment:
#     GITHUB_APP_PRIVATE_KEY_BASE64: ${GITHUB_APP_PRIVATE_KEY_BASE64}
#
# Kamal (deploy.yml):
#   env:
#     clear:
#       GITHUB_APP_ID: 1234567
#     secret:
#       - GITHUB_APP_PRIVATE_KEY_BASE64